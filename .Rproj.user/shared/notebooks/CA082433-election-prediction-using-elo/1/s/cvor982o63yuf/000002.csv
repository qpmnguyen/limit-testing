"0","get_sequence <- function(proc_data, prior, st, init=1000, K = 50){"
"0","  df <- proc_data %>% filter(state == st) # filter by state"
"0","  weeks <- unique(df$week) # get all unique weeks "
"0","  elo <- vector(mode = ""list"", length = length(weeks) + 1) # initialize elo vector"
"0","  prior_diff <- prior %>% filter(state == st) %>% pull(elo_diff)"
"0","  elo[[1]] <- tibble("
"0","    DT_elo = init - prior_diff,"
"0","    JB_elo = init + prior_diff"
"0","  )"
"0","  # iterate "
"0","  for (i in 2:length(elo)){"
"0","    elos <- update_elo(r1 = elo[[i-1]]$JB_elo, "
"0","                       r2 = elo[[i-1]]$DT_elo,"
"0","                       outcome = df$win[i-1], "
"0","                       mov = df$mov[i-1], K = K)"
"0","    elo[[i]] <- tibble("
"0","      DT_elo = elos$r2,"
"0","      JB_elo = elos$r1,"
"0","    )"
"0","  }"
"0","  seq <- do.call(rbind, elo)"
"0","  weeks <- c(min(weeks)-1, weeks)"
"0","  seq <- seq %>% mutate(state = rep(st, length(elo)), week = weeks)"
"0","  seq <- seq %>% select(state, week, DT_elo, JB_elo) %>% "
"0","    pivot_longer(c(DT_elo, JB_elo), names_to = ""candidate"", values_to = ""elo"") %>% "
"0","    mutate(candidate = recode(candidate, DT_elo = ""DT"", JB_elo = ""JB""))"
"0","  return(seq)"
"0","}"
